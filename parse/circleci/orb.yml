version: 2.1
description: Job for finding, parsing, and sending feature flag code references to LaunchDarkly

executors:
  default:
    parameters:
      proj_key:
        type: string
      base_uri:
        type: string
      context_lines:
        type: string
      default_branch:
        type: string
      exclude:
        type: string
      repo_type:
        type: string
      repo_url:
        type: string
      commit_url_template:
        type: string
      hunk_url_template:
        type: string
    environment:
      LD_PROJ_KEY: << parameters.proj_key >>
      LD_BASE_URI: << parameters.base_uri >>
      LD_EXCLUDE: << parameters.exclude >>
      LD_CONTEXT_LINES: << parameters.context_lines >>
      LD_REPO_TYPE: << parameters.repo_type >>
      LD_REPO_URL: << parameters.repo_url >>
      LD_COMMIT_URL_TEMPLATE: << parameters.commit_url_template >>
      LD_HUNK_URL_TEMPLATE: << parameters.hunk_url_template >>
      LD_DEFAULT_BRANCH: << parameters.default_branch >>
    docker:
      # TODO: use gh release tarball when git-flag-parser is released
      - image: ldactions/git-flag-parser:latest
commands:
  find-flags:
    parameters:
      ssh_fingerprint:
        description: Git repo ssh fingerprint
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - << parameters.ssh_fingerprint >>
      - run:
          name: Disable ssh fingerprint checking
          command: mkdir ~/.ssh/ && echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Find flag references
          command: |
            /git-flag-parser \
              -accessToken=${LD_ACCESS_TOKEN} \
              -projKey=${LD_PROJ_KEY} \
              -exclude=${LD_EXCLUDE} \
              -contextLines=${LD_CONTEXT_LINES} \
              -baseUri=${LD_BASE_URI} \
              -repoType=${LD_REPO_TYPE} \
              -repoUrl=${LD_REPO_URL} \
              -repoName=${CIRCLE_PROJECT_REPONAME} \
              -repoHead=${CIRCLE_BRANCH} \
              -cloneEndpoint=${CIRCLE_REPOSITORY_URL} \
              -pushTime=$(date +%s) \
              -defaultBranch=${LD_DEFAULT_BRANCH} \
              -commitUrlTemplate=${LD_COMMIT_URL_TEMPLATE} \
              -hunkUrlTemplate=${LD_HUNK_URL_TEMPLATE}
jobs:
  find-code-references:
    parameters:
      ssh_fingerprint:
        description: Git repo ssh fingerprint
        type: string
      proj_key:
        description: LaunchDarkly project key
        type: string
      base_uri:
        description: Set the base URL of the LaunchDarkly server for this configuration. Only necessary if using a private instance of LaunchDarkly.
        type: string
        default: "https://app.launchdarkly.com"
      context_lines:
        description: The number of context lines above and below a code reference for the flag parser to send to LaunchDarkly. If < 0, no source code will be sent to LaunchDarkly. If 0, only the lines containing flag references will be sent. If > 0, will send that number of context lines above and below the flag reference. A maximum of 5 context lines may be provided.
        type: string
        default: "-1"
      exclude:
        description:  A regular expression defining the files and directories which the flag parser should exclude.
        type: string
        default: ""
      repo_type:
        description: "The repo service provider. Used to correctly categorize repositories in the LaunchDarkly UI. Acceptable values: github|bitbucket|custom"
        type: string
        default: "custom"
      repo_url:
        description:  "The display url for the repository. If provided for a github or bitbucket repository, LaunchDarkly will attempt to automatically generate source code links. Example: `https://github.com/launchdarkly/git-flag-parser`"
        type: string
        default: ""
      default_branch:
        description: "The git default branch. The LaunchDarkly UI will default to display code references for this branch."
        type: string
        default: "master"
      commit_url_template:
        description: "If provided, LaunchDarkly will attempt to generate links to your Git service provider per commit. Example: `https://github.com/launchdarkly/git-flag-parser/commit/${sha}`. Allowed template variables: `branchName`, `sha`. If `commitUrlTemplate` is not provided, but `repoUrl` is provided, LaunchDarkly will automatically generate links for github or bitbucket repo types."
        type: string
        default: ""
      hunk_url_template:
        description: "If provided, LaunchDarkly will attempt to generate links to your Git service provider per code reference. Example: `https://github.com/launchdarkly/git-flag-parser/blob/${sha}/${filePath}#L${lineNumber}`. Allowed template variables: `sha`, `filePath`, `lineNumber`. If `hunkUrlTemplate` is not provided, but `repoUrl` is provided, LaunchDarkly will automatically generate links for github or bitbucket repo types."
        type: string
        default: ""
    executor:
      name: default
      proj_key: << parameters.proj_key >>
      base_uri: << parameters.base_uri >>
      context_lines: << parameters.context_lines >>
      exclude: << parameters.exclude >>
      repo_type: << parameters.repo_type >>
      repo_url: << parameters.repo_url >>
      default_branch: << parameters.default_branch >>
      commit_url_template: << parmaeters.commit_url_template >>
      hunk_url_template: << parameters.hunk_url_template >>
    steps:
      - find-flags:
          ssh_fingerprint: << parameters.ssh_fingerprint >>
